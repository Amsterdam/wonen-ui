{"version":3,"file":"551.3c20590b.iframe.bundle.js","mappings":";;;AAMA;;AAEA;AACA;AAEA;;AAEA;;;;;AAOA;;;AAIA;;;AAGA;;;;;AAKA;;AAEA;AACA;;;;AAIA;;;AAGA;;;AC1CA;;;;;;;ACgBA;;AAEA;AAEA;;AAGA;;AAqMA;AA7DA;;;;;;;;;;AAUA;AACA;;;;AAKA;;AAEA;AAvJA;;AAKA;AACA;AACA;;;;AAIA;;AAGA;;AAGA;AACA;AACA;;;;AAIA;;;AAGA;;AAGA;;AAEA;AACA;;;AAIA;;AAGA;AACA;;;;AAIA;;AAGA;;AAGA;AACA;AACA;AACA;;;AAGA;;AAGA;;;;;;AAOA;;AAEA;;;AAGA;;;AAGA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAGA;AAEA;AACA;;AAEA;;AAGA;AAEA;AACA;;AAEA;AACA;;AAEA;;AAGA;AAGA;AAGA;AAEA;;;AAGA;AAEA;;;;AAIA;AAGA;AAEA;;;AAIA;AC1JA;;;;;;;;ADkLA;;;;;;AAOA;;;;;AAKA;;;;AAIA;;;;;;;AAOA;AACA;AACA;;AAEA;AAEA;AACA;;;AAGA;;;;AErNA;;;;;;ACSA;AACA;ACVA;ACWA;AACA;AAEA;;AAEA;AACA;AACA;;AAEA;AAEA;;;AAGA;;;AAGA;AACA;AACA;;;;AAIA;;;;;;;ACxBA;;;;AAKA;AACA;;;AAGA;;;;AAIA;AAEA;;;;;;;;;;AAYA;AACA;AAEA;AACA;;AAEA;;;AAIA;AACA;AAEA;AACA;ACnDA;;;ACMA;AACA;ACPA;;;;;;;;;;;ACcA;AACA;;;;;ACfA;;ACOA;AACA;;AAKA;;;AAGA;;AAGA;;AAEA;AAEA;;AAEA;AAEA","sources":["webpack://@amsterdam/wonen-ui/./node_modules/@amsterdam/asc-ui/es/components/Accordion/AccordionStyle.js","webpack://@amsterdam/wonen-ui/./node_modules/@amsterdam/asc-ui/es/components/Accordion/Accordion.js","webpack://@amsterdam/wonen-ui/./node_modules/@amsterdam/asc-ui/es/components/Button/ButtonStyle.js","webpack://@amsterdam/wonen-ui/./node_modules/@amsterdam/asc-ui/es/components/shared/ie-fixes.js","webpack://@amsterdam/wonen-ui/./node_modules/@amsterdam/asc-ui/es/components/Button/Button.js","webpack://@amsterdam/wonen-ui/./node_modules/@amsterdam/asc-ui/es/components/Heading/HeadingStyle.js","webpack://@amsterdam/wonen-ui/./node_modules/@amsterdam/asc-ui/es/components/Heading/Heading.js","webpack://@amsterdam/wonen-ui/./node_modules/@amsterdam/asc-ui/es/components/Icon/IconStyle.js","webpack://@amsterdam/wonen-ui/./node_modules/@amsterdam/asc-ui/es/components/Pagination/PaginationStyle.js","webpack://@amsterdam/wonen-ui/./node_modules/@amsterdam/asc-ui/es/components/Pagination/Pagination.js","webpack://@amsterdam/wonen-ui/./node_modules/@amsterdam/asc-ui/es/components/Paragraph/ParagraphStyle.js","webpack://@amsterdam/wonen-ui/./node_modules/@amsterdam/asc-ui/es/components/Paragraph/Paragraph.js","webpack://@amsterdam/wonen-ui/./node_modules/@amsterdam/asc-ui/es/components/Spinner/SpinnerStyle.js","webpack://@amsterdam/wonen-ui/./node_modules/@amsterdam/asc-ui/es/components/Spinner/Spinner.js","webpack://@amsterdam/wonen-ui/./node_modules/@amsterdam/asc-ui/es/components/Typography/TypographyStyle.js"],"sourcesContent":["import styled, { css } from 'styled-components';\r\nimport Button from '../Button';\r\nimport { IconStyle } from '../Icon';\r\nimport { themeColor, themeSpacing } from '../../utils/themeUtils';\r\nconst AccordionContent = styled.div `\n  transition: border-color 0.1s ease-in-out;\n  border: 2px solid ${themeColor('tint', 'level3')};\n  border-top: none;\n  padding: ${themeSpacing(4)};\n  display: ${({ isOpen }) => !isOpen && 'none'};\n`;\r\nconst AccordionButtonContent = styled.span `\n  text-align: left;\n  ${({ noMultiline }) => noMultiline\r\n    ? css `\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          margin-right: 20px;\n        `\r\n    : css `\n          white-space: normal;\n        `}\n`;\r\nconst AccordionButton = styled(Button) `\n  width: 100%;\n  height: initial;\n  background-color: ${themeColor('tint', 'level3')};\n\n  &:hover,\n  /* double ampersand to override this style */\n  &&:focus {\n    background-color: ${themeColor('tint', 'level4')};\n\n    & + ${AccordionContent} {\n      border-color: ${themeColor('tint', 'level4')};\n    }\n  }\n\n  ${IconStyle} {\n    align-self: flex-start;\n    margin-left: auto;\n    transform: rotate(${({ isOpen }) => (isOpen ? '180deg' : '0deg')});\n    transition: transform 0.3s ease;\n  }\n`;\r\nexport { AccordionButton, AccordionContent, AccordionButtonContent };\r\n//# sourceMappingURL=AccordionStyle.js.map","var __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport { ChevronDown } from '@amsterdam/asc-assets';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { useUID } from 'react-uid';\r\nimport { AccordionButton, AccordionButtonContent, AccordionContent, } from './AccordionStyle';\r\nfunction Accordion(_a) {\r\n    var { children, title, id: idProp, isOpen, onToggle, noMultiline } = _a, otherProps = __rest(_a, [\"children\", \"title\", \"id\", \"isOpen\", \"onToggle\", \"noMultiline\"]);\r\n    const uid = useUID();\r\n    const id = idProp || uid;\r\n    const [open, setOpen] = useState(isOpen !== null && isOpen !== void 0 ? isOpen : false);\r\n    useEffect(() => {\r\n        if (isOpen !== undefined && isOpen !== open) {\r\n            setOpen(isOpen);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [isOpen]);\r\n    const handleClick = useCallback(() => {\r\n        const newOpenState = !open;\r\n        if (onToggle) {\r\n            onToggle(newOpenState);\r\n        }\r\n        setOpen(newOpenState);\r\n    }, [open, onToggle]);\r\n    return (_jsxs(_Fragment, { children: [_jsx(AccordionButton, Object.assign({ \"aria-controls\": id, \"aria-expanded\": open, id: `label-${id}`, type: \"button\", variant: \"tertiary\", iconRight: _jsx(ChevronDown, {}), isOpen: open, title: title, onClick: handleClick }, otherProps, { children: _jsx(AccordionButtonContent, Object.assign({ noMultiline: noMultiline }, { children: title })) })), _jsx(AccordionContent, Object.assign({ isOpen: open, \"aria-labelledby\": `label-${id}`, id: id }, { children: children }))] }));\r\n}\r\nexport default Accordion;\r\n//# sourceMappingURL=Accordion.js.map","import { darken, readableColor, size, transitions } from 'polished';\r\nimport styled, { css } from 'styled-components';\r\nimport { svgFill, themeColor, themeSpacing } from '../../utils';\r\nimport Icon from '../Icon';\r\nimport { flexboxMinHeightFix } from '../shared/ie-fixes';\r\nconst defaultProps = {\r\n    size: 30,\r\n};\r\nexport const getButtonHeight = (theme) => themeSpacing(11)({ theme });\r\nexport const ArrowRight = styled.div `\n  position: relative;\n  top: 0;\n  right: -15px;\n  width: 0;\n  height: 0;\n  border: 22px solid rgba(255, 255, 255, 0);\n  border-left: 15px solid ${themeColor('secondary')};\n  border-right: 0;\n  ${transitions('border-color', '0.1s ease-in-out')}\n`;\r\nexport const IconLeft = styled(Icon) `\n  margin-right: 10px;\n`;\r\nexport const IconRight = styled(Icon) `\n  margin-left: 10px;\n`;\r\nconst getVariant = () => ({ theme, variant, color, }) => {\r\n    switch (variant) {\r\n        case 'primary':\r\n            return css `\n          min-width: 90px;\n          background-color: ${themeColor('primary')};\n          color: ${readableColor(themeColor('primary')({ theme }))};\n          ${svgFill(themeColor('tint', 'level1'))};\n\n          &:focus,\n          &:hover {\n            background-color: ${darken(0.1, themeColor('primary')({ theme }))};\n          }\n        `;\r\n        case 'secondary':\r\n            return css `\n          min-width: 90px;\n          background-color: ${themeColor('secondary')};\n          color: ${themeColor('tint', 'level1')};\n          ${svgFill(themeColor('tint', 'level1'))};\n\n          &:focus,\n          &:hover {\n            background-color: ${darken(0.1, themeColor('secondary')({ theme }))};\n          }\n\n          ${(taskflow) => taskflow &&\r\n                css `\n              &:not(:disabled)&:focus\n                ${ArrowRight},\n                &:not(:disabled)&:hover\n                ${ArrowRight} {\n                border-left-color: ${darken(0.1, themeColor('secondary')({ theme }))};\n              }\n            `}\n        `;\r\n        case 'tertiary':\r\n            return css `\n          min-width: 90px;\n          background-color: ${themeColor('tint', 'level4')};\n          ${svgFill(themeColor('tint', 'level7'))};\n\n          &:focus,\n          &:hover {\n            background-color: ${darken(0.1, themeColor('tint', 'level4')({ theme }))};\n          }\n        `;\r\n        case 'primaryInverted':\r\n            return css `\n          min-width: 90px;\n          color: ${themeColor('primary')};\n          border: 1px solid ${themeColor('primary')};\n          background-color: ${themeColor('tint', 'level1')};\n          ${svgFill(themeColor('primary', 'main'))};\n\n          &:hover {\n            outline: 1px solid ${themeColor('primary')};\n          }\n        `;\r\n        case 'textButton':\r\n            return css `\n          height: auto;\n          padding: 0;\n          align-self: baseline;\n          white-space: normal;\n          text-align: left;\n          color: ${themeColor('primary')};\n          background-color: rgba(0, 0, 0, 0);\n          ${svgFill(themeColor('primary', 'main'))};\n\n          /* remove transition because it's async with Icon */\n          ${transitions('color', '0s')}\n\n          &:hover {\n            color: ${themeColor('secondary')};\n            ${svgFill(themeColor('secondary', 'main'))};\n          }\n\n          ${IconLeft} {\n            margin-right: ${themeSpacing(1)};\n          }\n          ${IconRight} {\n            margin-left: ${themeSpacing(1)};\n          }\n        `;\r\n        case 'blank':\r\n            return css `\n          background-color: ${themeColor('tint', 'level1')};\n          ${svgFill(themeColor('tint', 'level7'))};\n          &:hover {\n            background-color: ${themeColor('tint', 'level3')};\n          }\n        `;\r\n        case 'application':\r\n            return css `\n          border: 1px solid ${themeColor('tint', 'level7')};\n          background-color: ${themeColor('tint', 'level1')};\n          height: 32px;\n          padding: ${themeSpacing(1, 2)};\n          ${svgFill(themeColor('tint', 'level7'))};\n          &:hover {\n            background-color: ${themeColor('tint', 'level4')};\n          }\n        `;\r\n        default:\r\n            // About-to-be-deprecated codeblock to support the 'color' prop\r\n            return css `\n          color: ${color\r\n                ? readableColor(themeColor(color)({ theme }))\r\n                : themeColor('primary')({ theme })};\n          ${color &&\r\n                css `\n            background: ${themeColor(color)};\n          `}\n\n          ${!color &&\r\n                css `\n            border: 1px solid ${themeColor('primary')};\n          `}\n\n        &:hover {\n            background: ${color\r\n                ? themeColor(color, 'dark')({ theme })\r\n                : themeColor('tint', 'level3')({ theme })};\n            ${!color &&\r\n                css `\n              outline: 1px solid ${themeColor('primary')};\n            `}\n          }\n        `;\r\n    }\r\n};\r\nconst ButtonStyle = styled.button `\n  height: ${({ theme }) => getButtonHeight(theme)};\n  white-space: nowrap;\n  display: inline-flex;\n  align-items: center;\n  text-decoration: none;\n  border: none;\n  cursor: pointer;\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 20px;\n  padding: ${({ size: sizeProp, theme }) => sizeProp ? '0' : themeSpacing(3, 4)({ theme })};\n  ${({ size: sizeProp, square }) => (sizeProp || square) && // make the button square\r\n    css `\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      ${size(sizeProp || defaultProps.size)}// width and height\n    `}\n  ${transitions(['color', 'background-color'], '0.1s ease-in-out')}\n  ${getVariant()}\n  ${flexboxMinHeightFix()} // ie fix\n  ${({ taskflow }) => taskflow &&\r\n    css `\n      position: relative;\n      min-width: initial;\n      padding-right: 0;\n      padding-top: 0; // safari fix\n      padding-bottom: 0; // safari fix\n      line-height: ${({ theme }) => getButtonHeight(theme)}; // safari 10.1 fix\n      z-index: 0;\n      && {\n        margin-right: 25px;\n      }\n      &:focus ${ArrowRight}:after {\n        opacity: 1;\n      }\n    `}\n  ${Icon} {\n    flex-shrink: 0;\n  }\n  &:disabled {\n    cursor: default;\n    outline: none;\n    border: none;\n    color: ${themeColor('tint', 'level4')};\n    background-color: ${themeColor('tint', 'level3')};\n    ${svgFill(themeColor('tint', 'level4'))};\n    text-decoration: none;\n    ${({ taskflow }) => taskflow &&\r\n    css `\n        ${ArrowRight} {\n          border-left-color: ${themeColor('tint', 'level3')};\n        }\n      `}\n    ${({ variant }) => variant &&\r\n    variant === 'textButton' &&\r\n    css `\n        background-color: rgba(0, 0, 0, 0);\n      `}\n  }\n`;\r\nexport default ButtonStyle;\r\n//# sourceMappingURL=ButtonStyle.js.map","/* eslint-disable import/prefer-default-export */\r\nimport { css } from 'styled-components';\r\nexport const flexboxMinHeightFix = () => css `\n  &::after {\n    content: '';\n    display: block;\n    min-height: inherit;\n    font-size: 0;\n  }\n`;\r\n//# sourceMappingURL=ie-fixes.js.map","var __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport { forwardRef } from 'react';\r\nimport Icon, { defaultProps as iconDefaultProps } from '../Icon/Icon';\r\nimport ButtonStyle, { ArrowRight, IconLeft, IconRight, } from './ButtonStyle';\r\nconst Button = forwardRef((_a, ref) => {\r\n    var { children, iconLeft, iconRight, icon, iconSize, taskflow } = _a, otherProps = __rest(_a, [\"children\", \"iconLeft\", \"iconRight\", \"icon\", \"iconSize\", \"taskflow\"]);\r\n    const iconProps = {\r\n        size: iconSize || iconDefaultProps.size,\r\n    };\r\n    return (_jsxs(ButtonStyle, Object.assign({ ref: ref }, otherProps, { taskflow: taskflow }, { children: [iconLeft && _jsx(IconLeft, Object.assign({}, iconProps, { children: iconLeft })), icon ? _jsx(Icon, Object.assign({}, iconProps, { children: icon })) : children, iconRight && _jsx(IconRight, Object.assign({}, iconProps, { children: iconRight })), taskflow && _jsx(ArrowRight, {})] })));\r\n});\r\nexport default Button;\r\n//# sourceMappingURL=Button.js.map","import styled, { css } from 'styled-components';\r\nimport Typography from '../Typography';\r\nexport const HeaderStyleCSS = css `\n  margin-top: 0;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n`;\r\nexport default styled(Typography) `\n  ${HeaderStyleCSS}\n`;\r\n//# sourceMappingURL=HeadingStyle.js.map","var __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport HeadingStyle from './HeadingStyle';\r\nfunction Heading(_a) {\r\n    var { children, as } = _a, otherProps = __rest(_a, [\"children\", \"as\"]);\r\n    return (_jsx(HeadingStyle, Object.assign({ forwardedAs: as }, otherProps, { children: children })));\r\n}\r\nHeading.defaultProps = {\r\n    as: 'h1',\r\n};\r\nexport default Heading;\r\n//# sourceMappingURL=Heading.js.map","import styled, { css } from 'styled-components';\r\nimport { svgFill } from '../../utils';\r\nexport const defaultProps = {\r\n    size: 20,\r\n    padding: 0,\r\n    rotate: 0,\r\n};\r\nconst IconStyle = styled.span.withConfig({\r\n    shouldForwardProp: (prop, defaultValidatorFn) => !['size', 'rotate', 'padding', 'inline', 'color'].includes(prop) &&\r\n        defaultValidatorFn(prop),\r\n}) `\n  display: ${({ inline }) => (inline ? 'inline-flex' : 'flex')};\n  ${({ iconUrl }) => iconUrl &&\r\n    css `\n      background-image: url(${iconUrl});\n    `}\n  ${({ size = defaultProps.size, padding = defaultProps.padding }) => css `\n    width: ${size - padding * 2}px;\n    height: ${size - padding * 2}px;\n  `}\n  ${({ padding }) => padding &&\r\n    css `\n      padding: ${padding}px;\n    `};\n  box-sizing: content-box;\n  ${({ rotate = defaultProps.rotate }) => `transform: rotate(${rotate}deg)`};\n\n  & > svg {\n    ${({ size = defaultProps.size, padding = defaultProps.padding }) => css `\n      width: ${size - padding * 2}px;\n      height: ${size - padding * 2}px;\n    `}\n  }\n\n  ${({ color }) => color && svgFill(color)};\n`;\r\nexport default IconStyle;\r\n//# sourceMappingURL=IconStyle.js.map","import styled, { css } from 'styled-components';\r\nimport { svgFill, themeColor } from '../../utils';\r\nimport Button from '../Button';\r\nexport const List = styled.ul `\n  display: flex;\n  align-items: center;\n  flex-wrap: nowrap;\n  list-style: none;\n  padding: 0;\n`;\r\nexport const ListItem = styled.li `\n  min-width: 54px;\n  display: inline-flex;\n  justify-content: center;\n`;\r\nconst baseButtonStyles = css `\n  color: ${themeColor('tint', 'level7')};\n\n  &:not(:disabled):hover {\n    color: ${themeColor('secondary', 'main')};\n    text-decoration: underline;\n  }\n\n  ${svgFill(themeColor('tint', 'level7'))}\n`;\r\nexport const PageNumberStyle = styled.button.attrs({\r\n    type: 'button',\r\n}) `\n  cursor: pointer;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 22px;\n  min-width: 32px;\n  appearance: none;\n  border: none;\n  background: none;\n  text-align: center;\n  ${baseButtonStyles}\n  ${({ isCurrent }) => isCurrent &&\r\n    css `\n      background-color: ${themeColor('tint', 'level5')};\n      color: ${themeColor('bright', 'main')};\n      &:not(:disabled):hover {\n        color: ${themeColor('bright', 'main')};\n      }\n    `};\n`;\r\nexport const PreviousButton = styled(Button) `\n  ${baseButtonStyles}\n`;\r\nexport const NextButton = styled(Button) `\n  ${baseButtonStyles}\n`;\r\n//# sourceMappingURL=PaginationStyle.js.map","var __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport { useEffect, useMemo, useState } from 'react';\r\nimport { ChevronLeft, ChevronRight } from '@amsterdam/asc-assets';\r\nimport { PageNumberStyle, PreviousButton, NextButton, ListItem, List, } from './PaginationStyle';\r\nconst DEFAULT_PAGINATION_LENGTH = 7;\r\nfunction Pagination(_a) {\r\n    var { collectionSize, onPageChange, page = 1, pageSize = 10, paginationLength = DEFAULT_PAGINATION_LENGTH, labelPrevious = 'vorige', labelNext = 'volgende', ariaLabelPrevious = 'Vorige pagina', ariaLabelNext = 'Volgende pagina' } = _a, otherProps = __rest(_a, [\"collectionSize\", \"onPageChange\", \"page\", \"pageSize\", \"paginationLength\", \"labelPrevious\", \"labelNext\", \"ariaLabelPrevious\", \"ariaLabelNext\"]);\r\n    const [currentPage, setCurrentPage] = useState(page);\r\n    const totalPages = useMemo(() => Math.ceil(collectionSize / pageSize), [collectionSize, pageSize]);\r\n    useEffect(() => {\r\n        if (paginationLength < 5) {\r\n            // eslint-disable-next-line no-console\r\n            console.warn('paginationLength prop in Pagination component should be at least 5. If you need a smaller pagination component, please use the CompactPager component. Now falling back to default value');\r\n        }\r\n    }, [paginationLength]);\r\n    // If page prop changes, set currentPage so component can be managed externally\r\n    useEffect(() => {\r\n        setCurrentPage(page);\r\n    }, [page]);\r\n    /**\r\n     * This returns an array of the range, including spacers\r\n     *\r\n     * @example\r\n     * currentPage = 4, totalPages = 7\r\n     * // returns [1, 2, 3, 4, 5, 6, 7]\r\n     *\r\n     * @example\r\n     * currentPage = 5, totalPages = 100\r\n     * // returns [1, 'firstSpacer', 4, 5, 6, 'lastSpacer', 100]\r\n     *\r\n     * @example\r\n     * currentPage = 97, totalPages = 100\r\n     * // returns [1, 'firstSpacer', 96, 97, 98, 99, 100]\r\n     */\r\n    const range = useMemo(() => {\r\n        const min = 1;\r\n        let paginatedLength = paginationLength < 5 ? DEFAULT_PAGINATION_LENGTH : paginationLength;\r\n        if (paginationLength > totalPages) {\r\n            paginatedLength = totalPages;\r\n        }\r\n        let start = currentPage - Math.floor(paginatedLength / 2);\r\n        start = Math.max(start, min);\r\n        start = Math.min(start, min + totalPages - paginatedLength);\r\n        return Array.from({ length: paginatedLength }, (el, i) => start + i).reduce((acc, pageNr, index) => {\r\n            if (index === 0 && pageNr !== 1) {\r\n                return [1, 'firstSpacer'];\r\n            }\r\n            if (totalPages > paginatedLength &&\r\n                index === paginatedLength - 2 &&\r\n                currentPage < totalPages - 2) {\r\n                return [...acc, 'lastSpacer', totalPages];\r\n            }\r\n            // Skip a number when spacer is already add\r\n            if ((acc.includes('firstSpacer') && index === 1) ||\r\n                (acc.includes('lastSpacer') && index === paginatedLength - 1)) {\r\n                return acc;\r\n            }\r\n            return [...acc, pageNr];\r\n        }, []);\r\n    }, [currentPage, totalPages, paginationLength]);\r\n    const onChangePage = (newPage) => {\r\n        if (onPageChange !== undefined)\r\n            onPageChange(newPage);\r\n        setCurrentPage(newPage);\r\n    };\r\n    const onPrevious = () => {\r\n        onChangePage(currentPage - 1);\r\n    };\r\n    const onNext = () => {\r\n        onChangePage(currentPage + 1);\r\n    };\r\n    return (_jsx(\"nav\", Object.assign({ \"aria-label\": \"paginering\", role: \"navigation\" }, otherProps, { children: _jsxs(List, { children: [_jsx(ListItem, { children: _jsx(PreviousButton, Object.assign({ type: \"button\", \"aria-label\": ariaLabelPrevious, tabIndex: 0, \"data-testid\": \"previousButton\", onClick: onPrevious, iconLeft: _jsx(ChevronLeft, {}), variant: \"textButton\", disabled: currentPage === 1 }, { children: labelPrevious })) }), range.map((pageNumberOrSpacer) => typeof pageNumberOrSpacer === 'number' ? (_jsx(ListItem, { children: _jsx(PageNumberStyle, Object.assign({ \"aria-label\": pageNumberOrSpacer === currentPage\r\n                            ? `Pagina ${pageNumberOrSpacer}`\r\n                            : `Ga naar pagina ${pageNumberOrSpacer}`, \"aria-current\": pageNumberOrSpacer === currentPage, \"data-testid\": `pageButton-${pageNumberOrSpacer}`, onClick: () => onChangePage(pageNumberOrSpacer), isCurrent: pageNumberOrSpacer === currentPage, tabIndex: pageNumberOrSpacer === currentPage ? -1 : 0 }, { children: pageNumberOrSpacer })) }, `pag-${pageNumberOrSpacer}`)) : (_jsx(ListItem, Object.assign({ \"data-testid\": pageNumberOrSpacer }, { children: '\\u2026' }), pageNumberOrSpacer))), _jsx(ListItem, { children: _jsx(NextButton, Object.assign({ type: \"button\", \"aria-label\": ariaLabelNext, tabIndex: 0, \"data-testid\": \"nextButton\", onClick: onNext, iconRight: _jsx(ChevronRight, {}), variant: \"textButton\", disabled: currentPage === totalPages }, { children: labelNext })) })] }) })));\r\n}\r\nexport default Pagination;\r\n//# sourceMappingURL=Pagination.js.map","import styled, { css } from 'styled-components';\r\nimport TypographyStyle from '../Typography/TypographyStyle';\r\nexport const ParagraphStyleCSS = css `\n  margin-top: 0;\n  color: inherit;\n`;\r\nexport default styled(TypographyStyle) `\n  ${ParagraphStyleCSS};\n`;\r\n//# sourceMappingURL=ParagraphStyle.js.map","var __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport ParagraphStyle from './ParagraphStyle';\r\nfunction Paragraph(_a) {\r\n    var { children, as } = _a, otherProps = __rest(_a, [\"children\", \"as\"]);\r\n    return (_jsx(ParagraphStyle, Object.assign({ forwardedAs: as }, otherProps, { children: children })));\r\n}\r\nexport default Paragraph;\r\n//# sourceMappingURL=Paragraph.js.map","import styled from 'styled-components';\r\nconst SpinnerStyle = styled.div.withConfig({\r\n    shouldForwardProp: (prop, defaultValidatorFn) => !['size', 'color'].includes(prop) && defaultValidatorFn(prop),\r\n}) `\n  @keyframes rotating {\n    0% {\n      transform: rotate(0deg);\n    }\n\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n\n  width: ${({ size }) => size}px;\n  height: ${({ size }) => size}px;\n\n  & svg {\n    animation: rotating 1s linear infinite;\n  }\n`;\r\nexport default SpinnerStyle;\r\n//# sourceMappingURL=SpinnerStyle.js.map","var __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { Spinner as SpinnerIcon } from '@amsterdam/asc-assets';\r\nimport Icon from '../Icon/Icon';\r\nimport SpinnerStyle from './SpinnerStyle';\r\nfunction Spinner(_a) {\r\n    var { size, color } = _a, otherProps = __rest(_a, [\"size\", \"color\"]);\r\n    return (_jsx(SpinnerStyle, Object.assign({ size: size }, otherProps, { children: _jsx(Icon, Object.assign({ size: size, color: color }, { children: _jsx(SpinnerIcon, {}) })) })));\r\n}\r\nSpinner.defaultProps = {\r\n    size: 20,\r\n};\r\nexport default Spinner;\r\n//# sourceMappingURL=Spinner.js.map","import styled, { css } from 'styled-components';\r\nimport { getTypographyFromTheme, themeColor } from '../../utils';\r\nexport const defaultTypographyStyles = {\r\n    em: css `\n    font-style: italic;\n  `,\r\n};\r\nexport default styled.p `\n  ${({ as, forwardedAs }) => {\r\n    const key = as !== null && as !== void 0 ? as : forwardedAs;\r\n    return typeof key === 'string' && defaultTypographyStyles[key];\r\n}}\n  margin: 0;\n  ${getTypographyFromTheme()};\n  font-stretch: normal;\n  letter-spacing: normal;\n  ${({ strong }) => strong &&\r\n    css `\n      font-weight: 700;\n      color: ${themeColor('tint', 'level7')};\n    `}\n  ${({ color }) => color &&\r\n    css `\n      color: ${themeColor(color)};\n    `}\n  ${({ fontSize }) => fontSize &&\r\n    css `\n      font-size: ${fontSize}px;\n    `}\n`;\r\n//# sourceMappingURL=TypographyStyle.js.map"],"names":[],"sourceRoot":""}